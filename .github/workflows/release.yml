name: Build Executables

on:
  push:
    branches:
      - main
      - fix/deployments_2
    tags:
      - "v*.*.*"
  pull_request:
    braches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target:
          [
            x86_64-unknown-linux-gnu,
            x86_64-apple-darwin,
            x86_64-pc-windows-msvc,
          ]
        exclude:
          - os: ubuntu-latest
            target: x86_64-pc-windows-msvc
          - os: ubuntu-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-apple-darwin
    env:
      TARGET: ${{ matrix.target }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build Executables
        run: cargo build --release --target ${{ env.TARGET }}
      - name: Move Executables
        run: |
          if [[ ${{ inputs.os }} == "windows-latest" ]]; then
            mv target/${{ env.TARGET }}/release/media_tools.exe media_tools_{{ matrix.os }}_${{ env.TARGET }}.exe
          else
            mv target/${{ env.TARGET }}/release/media_tools media_tools_${{ matrix.os }}_${{ env.TARGET }}
          fi
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          path: |
            media_tools_${{ matrix.os }}_${{ env.TARGET }}*
          if-no-files-found: error
